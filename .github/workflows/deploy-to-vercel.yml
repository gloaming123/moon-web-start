# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy moon-web-start with GitHub Pages to vercel

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      #      - uses: npm/action-setup@v2
      #        with:
      #          version: 6.32.9
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      # java
      - name: Checkout Java project
        run: git clone https://github.com/thend03/xiaobot-spider.git

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: zulu

      - name: Build and run xiaobot-spider
        run: |
          cd xiaobot-spider
          mvn clean package  # 或者使用 `mvn package`，具体取决于你的项目
          java -jar target/xiaobot-spider-1.0-SNAPSHOT-jar-with-dependencies.jar  # 运行你的主方法，生成 detail.json
          # mv target/detail.json ../detail.json

      - name: Copy detail.json to Vue project
        run: |
          pwd
          rm -f ./detail.json #删掉当前的，重新生成一个
          cp /tmp/detail.json ./detail.json

      # setup npm
      - name: do npm install
        run: npm install

      - name: Run dispose base
        run: |
          echo "REFER_CODE=${{ secrets.REFER_CODE }}" > .env
          echo "print env"
          cat .env
          node disposebase.js
          echo "print preset.json"
          cat src/preset.json

      - name: Install Vercel CLI
        run: npm install --global vercel@canary
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
